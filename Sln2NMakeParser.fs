// Implementation file for parser generated by fsyacc
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "..\..\Sln2NMakeParser.fsy"

open Ast
open System
open System.Text
let foldstring sl= 
  (List.fold (fun (sb:StringBuilder) (s:String) -> sb.Append(s).Append(" ")) (new StringBuilder("")) sl).ToString()

# 13 "..\..\Sln2NMakeParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | SOLUTIONPROPERTIESNAMESTRING
  | PROJECTCONFIGURATIONPLATFORMNAMESTRING
  | SOLUTIONCONFIGURATIONPLATFORMNAMESTRING
  | POSTSOLUTION
  | PRESOLUTION
  | ENDGLOBAL
  | GLOBAL
  | ENDGLOBALSECTION
  | BEGINGLOBALSECTION
  | STRING of (System.String)
  | INT of (int)
  | BUILD
  | PERIOD
  | SOLUTIONCONFIGURATIONPLATFORMNAME
  | PIPE
  | POSTPROJECT
  | PROJECTDEPENDENCIES
  | PROJECTSECTION
  | ENDPROJECTSECTION
  | COMMA
  | CURLYBRACKETCLOSE
  | CURLYBRACKETOPEN
  | EOF
  | EQUALSIGN
  | BRACKETCLOSE
  | QUOTE
  | BRACKETOPEN
  | PROJECTTOKEN
  | HEADER
  | BOOL of (System.Boolean)
  | GUID of (System.Guid)
  | PROJECTGUID of (System.Guid)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_SOLUTIONPROPERTIESNAMESTRING
    | TOKEN_PROJECTCONFIGURATIONPLATFORMNAMESTRING
    | TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAMESTRING
    | TOKEN_POSTSOLUTION
    | TOKEN_PRESOLUTION
    | TOKEN_ENDGLOBAL
    | TOKEN_GLOBAL
    | TOKEN_ENDGLOBALSECTION
    | TOKEN_BEGINGLOBALSECTION
    | TOKEN_STRING
    | TOKEN_INT
    | TOKEN_BUILD
    | TOKEN_PERIOD
    | TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAME
    | TOKEN_PIPE
    | TOKEN_POSTPROJECT
    | TOKEN_PROJECTDEPENDENCIES
    | TOKEN_PROJECTSECTION
    | TOKEN_ENDPROJECTSECTION
    | TOKEN_COMMA
    | TOKEN_CURLYBRACKETCLOSE
    | TOKEN_CURLYBRACKETOPEN
    | TOKEN_EOF
    | TOKEN_EQUALSIGN
    | TOKEN_BRACKETCLOSE
    | TOKEN_QUOTE
    | TOKEN_BRACKETOPEN
    | TOKEN_PROJECTTOKEN
    | TOKEN_HEADER
    | TOKEN_BOOL
    | TOKEN_GUID
    | TOKEN_PROJECTGUID
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startSTART
    | NONTERM_START
    | NONTERM_SOLUTIONFILE
    | NONTERM_GLOBALSOLUTIONPROPERTYSECTION
    | NONTERM_GLOBALSECTIONLIST
    | NONTERM_GLOBALSECTION
    | NONTERM_SOLUTIONCONFIGURATONPLATFORMSECTION
    | NONTERM_SOLUTIONCONFIGURATIONPLATFORMLIST
    | NONTERM_SOLUTIONCONFIGURATIONPLATFORM
    | NONTERM_CONFIGURATION
    | NONTERM_PLATFORM
    | NONTERM_PROJECTCONFIGURATIONPLATFORMNAME
    | NONTERM_PROJECTCONFIGURATIONSECTION
    | NONTERM_PROJECTCONFIGURATIONLIST
    | NONTERM_PROJECTCONFIGURATION
    | NONTERM_BUILDPARAM
    | NONTERM_SOLUTIONPROPERTIESNAME
    | NONTERM_SOLUTIONPROPERTYSECTION
    | NONTERM_SOLUTIONPROPERTYLIST
    | NONTERM_SOLUTIONPROPERTY
    | NONTERM_OTHERPROPERTYSECTION
    | NONTERM_OTHERPROPERTYLIST
    | NONTERM_PROJECTLIST
    | NONTERM_PROJECT
    | NONTERM_ENDPROJECT
    | NONTERM_PROJECTINFO
    | NONTERM_DEPENDENCYSECTION
    | NONTERM_PROJECTNAME
    | NONTERM_DOTSTRINGLIST
    | NONTERM_DOTSTRING
    | NONTERM_PROJECTPATH
    | NONTERM_PROJECTIDGUID
    | NONTERM_PROJECTHEADER
    | NONTERM_DEPENDENCYLIST
    | NONTERM_DEPENDENCY
    | NONTERM_VERSION

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | SOLUTIONPROPERTIESNAMESTRING  -> 0 
  | PROJECTCONFIGURATIONPLATFORMNAMESTRING  -> 1 
  | SOLUTIONCONFIGURATIONPLATFORMNAMESTRING  -> 2 
  | POSTSOLUTION  -> 3 
  | PRESOLUTION  -> 4 
  | ENDGLOBAL  -> 5 
  | GLOBAL  -> 6 
  | ENDGLOBALSECTION  -> 7 
  | BEGINGLOBALSECTION  -> 8 
  | STRING _ -> 9 
  | INT _ -> 10 
  | BUILD  -> 11 
  | PERIOD  -> 12 
  | SOLUTIONCONFIGURATIONPLATFORMNAME  -> 13 
  | PIPE  -> 14 
  | POSTPROJECT  -> 15 
  | PROJECTDEPENDENCIES  -> 16 
  | PROJECTSECTION  -> 17 
  | ENDPROJECTSECTION  -> 18 
  | COMMA  -> 19 
  | CURLYBRACKETCLOSE  -> 20 
  | CURLYBRACKETOPEN  -> 21 
  | EOF  -> 22 
  | EQUALSIGN  -> 23 
  | BRACKETCLOSE  -> 24 
  | QUOTE  -> 25 
  | BRACKETOPEN  -> 26 
  | PROJECTTOKEN  -> 27 
  | HEADER  -> 28 
  | BOOL _ -> 29 
  | GUID _ -> 30 
  | PROJECTGUID _ -> 31 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_SOLUTIONPROPERTIESNAMESTRING 
  | 1 -> TOKEN_PROJECTCONFIGURATIONPLATFORMNAMESTRING 
  | 2 -> TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAMESTRING 
  | 3 -> TOKEN_POSTSOLUTION 
  | 4 -> TOKEN_PRESOLUTION 
  | 5 -> TOKEN_ENDGLOBAL 
  | 6 -> TOKEN_GLOBAL 
  | 7 -> TOKEN_ENDGLOBALSECTION 
  | 8 -> TOKEN_BEGINGLOBALSECTION 
  | 9 -> TOKEN_STRING 
  | 10 -> TOKEN_INT 
  | 11 -> TOKEN_BUILD 
  | 12 -> TOKEN_PERIOD 
  | 13 -> TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAME 
  | 14 -> TOKEN_PIPE 
  | 15 -> TOKEN_POSTPROJECT 
  | 16 -> TOKEN_PROJECTDEPENDENCIES 
  | 17 -> TOKEN_PROJECTSECTION 
  | 18 -> TOKEN_ENDPROJECTSECTION 
  | 19 -> TOKEN_COMMA 
  | 20 -> TOKEN_CURLYBRACKETCLOSE 
  | 21 -> TOKEN_CURLYBRACKETOPEN 
  | 22 -> TOKEN_EOF 
  | 23 -> TOKEN_EQUALSIGN 
  | 24 -> TOKEN_BRACKETCLOSE 
  | 25 -> TOKEN_QUOTE 
  | 26 -> TOKEN_BRACKETOPEN 
  | 27 -> TOKEN_PROJECTTOKEN 
  | 28 -> TOKEN_HEADER 
  | 29 -> TOKEN_BOOL 
  | 30 -> TOKEN_GUID 
  | 31 -> TOKEN_PROJECTGUID 
  | 34 -> TOKEN_end_of_input
  | 32 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startSTART 
    | 1 -> NONTERM_START 
    | 2 -> NONTERM_SOLUTIONFILE 
    | 3 -> NONTERM_GLOBALSOLUTIONPROPERTYSECTION 
    | 4 -> NONTERM_GLOBALSECTIONLIST 
    | 5 -> NONTERM_GLOBALSECTIONLIST 
    | 6 -> NONTERM_GLOBALSECTION 
    | 7 -> NONTERM_GLOBALSECTION 
    | 8 -> NONTERM_GLOBALSECTION 
    | 9 -> NONTERM_GLOBALSECTION 
    | 10 -> NONTERM_SOLUTIONCONFIGURATONPLATFORMSECTION 
    | 11 -> NONTERM_SOLUTIONCONFIGURATIONPLATFORMLIST 
    | 12 -> NONTERM_SOLUTIONCONFIGURATIONPLATFORMLIST 
    | 13 -> NONTERM_SOLUTIONCONFIGURATIONPLATFORM 
    | 14 -> NONTERM_CONFIGURATION 
    | 15 -> NONTERM_PLATFORM 
    | 16 -> NONTERM_PROJECTCONFIGURATIONPLATFORMNAME 
    | 17 -> NONTERM_PROJECTCONFIGURATIONSECTION 
    | 18 -> NONTERM_PROJECTCONFIGURATIONLIST 
    | 19 -> NONTERM_PROJECTCONFIGURATIONLIST 
    | 20 -> NONTERM_PROJECTCONFIGURATION 
    | 21 -> NONTERM_PROJECTCONFIGURATION 
    | 22 -> NONTERM_BUILDPARAM 
    | 23 -> NONTERM_BUILDPARAM 
    | 24 -> NONTERM_SOLUTIONPROPERTIESNAME 
    | 25 -> NONTERM_SOLUTIONPROPERTYSECTION 
    | 26 -> NONTERM_SOLUTIONPROPERTYLIST 
    | 27 -> NONTERM_SOLUTIONPROPERTYLIST 
    | 28 -> NONTERM_SOLUTIONPROPERTY 
    | 29 -> NONTERM_SOLUTIONPROPERTY 
    | 30 -> NONTERM_OTHERPROPERTYSECTION 
    | 31 -> NONTERM_OTHERPROPERTYLIST 
    | 32 -> NONTERM_OTHERPROPERTYLIST 
    | 33 -> NONTERM_PROJECTLIST 
    | 34 -> NONTERM_PROJECTLIST 
    | 35 -> NONTERM_PROJECT 
    | 36 -> NONTERM_PROJECT 
    | 37 -> NONTERM_ENDPROJECT 
    | 38 -> NONTERM_PROJECTINFO 
    | 39 -> NONTERM_DEPENDENCYSECTION 
    | 40 -> NONTERM_PROJECTNAME 
    | 41 -> NONTERM_PROJECTNAME 
    | 42 -> NONTERM_DOTSTRINGLIST 
    | 43 -> NONTERM_DOTSTRINGLIST 
    | 44 -> NONTERM_DOTSTRING 
    | 45 -> NONTERM_PROJECTPATH 
    | 46 -> NONTERM_PROJECTIDGUID 
    | 47 -> NONTERM_PROJECTHEADER 
    | 48 -> NONTERM_DEPENDENCYLIST 
    | 49 -> NONTERM_DEPENDENCYLIST 
    | 50 -> NONTERM_DEPENDENCY 
    | 51 -> NONTERM_VERSION 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 34 
let _fsyacc_tagOfErrorTerminal = 32

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | SOLUTIONPROPERTIESNAMESTRING  -> "SOLUTIONPROPERTIESNAMESTRING" 
  | PROJECTCONFIGURATIONPLATFORMNAMESTRING  -> "PROJECTCONFIGURATIONPLATFORMNAMESTRING" 
  | SOLUTIONCONFIGURATIONPLATFORMNAMESTRING  -> "SOLUTIONCONFIGURATIONPLATFORMNAMESTRING" 
  | POSTSOLUTION  -> "POSTSOLUTION" 
  | PRESOLUTION  -> "PRESOLUTION" 
  | ENDGLOBAL  -> "ENDGLOBAL" 
  | GLOBAL  -> "GLOBAL" 
  | ENDGLOBALSECTION  -> "ENDGLOBALSECTION" 
  | BEGINGLOBALSECTION  -> "BEGINGLOBALSECTION" 
  | STRING _ -> "STRING" 
  | INT _ -> "INT" 
  | BUILD  -> "BUILD" 
  | PERIOD  -> "PERIOD" 
  | SOLUTIONCONFIGURATIONPLATFORMNAME  -> "SOLUTIONCONFIGURATIONPLATFORMNAME" 
  | PIPE  -> "PIPE" 
  | POSTPROJECT  -> "POSTPROJECT" 
  | PROJECTDEPENDENCIES  -> "PROJECTDEPENDENCIES" 
  | PROJECTSECTION  -> "PROJECTSECTION" 
  | ENDPROJECTSECTION  -> "ENDPROJECTSECTION" 
  | COMMA  -> "COMMA" 
  | CURLYBRACKETCLOSE  -> "CURLYBRACKETCLOSE" 
  | CURLYBRACKETOPEN  -> "CURLYBRACKETOPEN" 
  | EOF  -> "EOF" 
  | EQUALSIGN  -> "EQUALSIGN" 
  | BRACKETCLOSE  -> "BRACKETCLOSE" 
  | QUOTE  -> "QUOTE" 
  | BRACKETOPEN  -> "BRACKETOPEN" 
  | PROJECTTOKEN  -> "PROJECTTOKEN" 
  | HEADER  -> "HEADER" 
  | BOOL _ -> "BOOL" 
  | GUID _ -> "GUID" 
  | PROJECTGUID _ -> "PROJECTGUID" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | SOLUTIONPROPERTIESNAMESTRING  -> (null : System.Object) 
  | PROJECTCONFIGURATIONPLATFORMNAMESTRING  -> (null : System.Object) 
  | SOLUTIONCONFIGURATIONPLATFORMNAMESTRING  -> (null : System.Object) 
  | POSTSOLUTION  -> (null : System.Object) 
  | PRESOLUTION  -> (null : System.Object) 
  | ENDGLOBAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | ENDGLOBALSECTION  -> (null : System.Object) 
  | BEGINGLOBALSECTION  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BUILD  -> (null : System.Object) 
  | PERIOD  -> (null : System.Object) 
  | SOLUTIONCONFIGURATIONPLATFORMNAME  -> (null : System.Object) 
  | PIPE  -> (null : System.Object) 
  | POSTPROJECT  -> (null : System.Object) 
  | PROJECTDEPENDENCIES  -> (null : System.Object) 
  | PROJECTSECTION  -> (null : System.Object) 
  | ENDPROJECTSECTION  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | CURLYBRACKETCLOSE  -> (null : System.Object) 
  | CURLYBRACKETOPEN  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | EQUALSIGN  -> (null : System.Object) 
  | BRACKETCLOSE  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | BRACKETOPEN  -> (null : System.Object) 
  | PROJECTTOKEN  -> (null : System.Object) 
  | HEADER  -> (null : System.Object) 
  | BOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GUID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PROJECTGUID _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 1us; 65535us; 0us; 2us; 1us; 65535us; 5us; 6us; 1us; 65535us; 8us; 9us; 3us; 65535us; 8us; 11us; 9us; 13us; 11us; 12us; 1us; 65535us; 19us; 20us; 1us; 65535us; 19us; 38us; 2us; 65535us; 19us; 39us; 38us; 40us; 5us; 65535us; 19us; 41us; 38us; 41us; 44us; 45us; 58us; 59us; 63us; 64us; 4us; 65535us; 42us; 43us; 46us; 47us; 60us; 61us; 65us; 66us; 1us; 65535us; 14us; 22us; 1us; 65535us; 24us; 25us; 1us; 65535us; 24us; 52us; 2us; 65535us; 24us; 53us; 52us; 54us; 1us; 65535us; 61us; 62us; 1us; 65535us; 14us; 27us; 1us; 65535us; 29us; 30us; 1us; 65535us; 29us; 73us; 4us; 65535us; 29us; 74us; 35us; 83us; 73us; 75us; 82us; 84us; 1us; 65535us; 35us; 36us; 1us; 65535us; 35us; 82us; 1us; 65535us; 4us; 5us; 2us; 65535us; 4us; 85us; 5us; 86us; 2us; 65535us; 87us; 88us; 89us; 90us; 2us; 65535us; 4us; 87us; 5us; 87us; 1us; 65535us; 87us; 89us; 1us; 65535us; 94us; 95us; 1us; 65535us; 105us; 107us; 2us; 65535us; 105us; 109us; 107us; 110us; 1us; 65535us; 96us; 97us; 1us; 65535us; 98us; 99us; 2us; 65535us; 4us; 93us; 5us; 93us; 1us; 65535us; 101us; 102us; 2us; 65535us; 101us; 129us; 102us; 130us; 1us; 65535us; 3us; 4us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 5us; 7us; 9us; 13us; 15us; 17us; 20us; 26us; 31us; 33us; 35us; 37us; 40us; 42us; 44us; 46us; 48us; 53us; 55us; 57us; 59us; 62us; 65us; 68us; 70us; 72us; 74us; 77us; 79us; 81us; 84us; 86us; 89us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 2us; 2us; 2us; 34us; 1us; 2us; 1us; 2us; 1us; 3us; 2us; 3us; 5us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 4us; 6us; 7us; 8us; 9us; 4us; 6us; 9us; 16us; 24us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 7us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 1us; 9us; 2us; 10us; 12us; 1us; 11us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 19us; 1us; 18us; 1us; 19us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 2us; 20us; 21us; 1us; 20us; 1us; 20us; 2us; 22us; 23us; 2us; 22us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 2us; 25us; 27us; 1us; 26us; 1us; 27us; 2us; 28us; 29us; 2us; 28us; 29us; 1us; 28us; 1us; 29us; 1us; 29us; 1us; 29us; 2us; 30us; 32us; 1us; 31us; 1us; 32us; 1us; 33us; 1us; 34us; 2us; 35us; 36us; 1us; 35us; 1us; 36us; 1us; 36us; 1us; 37us; 2us; 37us; 39us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 38us; 1us; 39us; 1us; 39us; 2us; 39us; 49us; 1us; 39us; 2us; 40us; 41us; 2us; 40us; 41us; 1us; 40us; 2us; 41us; 43us; 1us; 41us; 1us; 42us; 1us; 43us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 51us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 13us; 15us; 17us; 19us; 22us; 24us; 26us; 28us; 30us; 35us; 40us; 42us; 44us; 46us; 48us; 50us; 52us; 54us; 56us; 58us; 60us; 62us; 64us; 66us; 68us; 70us; 72us; 74us; 76us; 78us; 80us; 82us; 84us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 111us; 113us; 116us; 118us; 120us; 123us; 126us; 129us; 132us; 135us; 138us; 141us; 144us; 147us; 150us; 152us; 154us; 157us; 160us; 162us; 164us; 166us; 168us; 171us; 173us; 175us; 178us; 181us; 183us; 185us; 187us; 189us; 192us; 194us; 196us; 198us; 200us; 203us; 205us; 207us; 209us; 211us; 214us; 216us; 218us; 220us; 222us; 224us; 226us; 228us; 230us; 232us; 235us; 237us; 240us; 243us; 245us; 248us; 250us; 252us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 274us; 276us; 278us; 280us; 282us; 284us; 286us; 288us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; |]
let _fsyacc_action_rows = 139
let _fsyacc_actionTableElements = [|1us; 32768us; 28us; 3us; 0us; 49152us; 0us; 16385us; 1us; 32768us; 9us; 138us; 1us; 32768us; 27us; 121us; 2us; 32768us; 6us; 8us; 27us; 121us; 1us; 32768us; 22us; 7us; 0us; 16386us; 1us; 32768us; 8us; 14us; 2us; 32768us; 5us; 10us; 8us; 14us; 0us; 16387us; 1us; 32768us; 8us; 14us; 0us; 16388us; 0us; 16389us; 1us; 32768us; 26us; 15us; 4us; 32768us; 0us; 71us; 1us; 50us; 2us; 16us; 9us; 32us; 1us; 32768us; 24us; 17us; 1us; 32768us; 23us; 18us; 1us; 32768us; 4us; 19us; 1us; 32768us; 9us; 48us; 1us; 32768us; 7us; 21us; 0us; 16390us; 1us; 32768us; 23us; 23us; 1us; 32768us; 3us; 24us; 1us; 32768us; 21us; 55us; 1us; 32768us; 7us; 26us; 0us; 16391us; 1us; 32768us; 23us; 28us; 1us; 32768us; 4us; 29us; 1us; 32768us; 9us; 76us; 1us; 32768us; 7us; 31us; 0us; 16392us; 1us; 32768us; 24us; 33us; 1us; 32768us; 23us; 34us; 1us; 32768us; 4us; 35us; 1us; 32768us; 9us; 76us; 1us; 32768us; 7us; 37us; 0us; 16393us; 1us; 16394us; 9us; 48us; 0us; 16395us; 0us; 16396us; 1us; 32768us; 14us; 42us; 1us; 32768us; 9us; 49us; 1us; 32768us; 23us; 44us; 1us; 32768us; 9us; 48us; 1us; 32768us; 14us; 46us; 1us; 32768us; 9us; 49us; 0us; 16397us; 0us; 16398us; 0us; 16399us; 1us; 32768us; 24us; 51us; 0us; 16400us; 1us; 16401us; 21us; 55us; 0us; 16402us; 0us; 16403us; 1us; 32768us; 30us; 56us; 1us; 32768us; 20us; 57us; 1us; 32768us; 12us; 58us; 1us; 32768us; 9us; 48us; 1us; 32768us; 14us; 60us; 1us; 32768us; 9us; 49us; 1us; 32768us; 12us; 67us; 1us; 32768us; 23us; 63us; 1us; 32768us; 9us; 48us; 1us; 16405us; 14us; 65us; 1us; 32768us; 9us; 49us; 0us; 16404us; 1us; 32768us; 9us; 68us; 1us; 16406us; 12us; 69us; 1us; 32768us; 9us; 70us; 0us; 16407us; 1us; 32768us; 24us; 72us; 0us; 16408us; 1us; 16409us; 9us; 76us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 23us; 77us; 2us; 32768us; 9us; 78us; 21us; 79us; 0us; 16412us; 1us; 32768us; 30us; 80us; 1us; 32768us; 20us; 81us; 0us; 16413us; 1us; 16414us; 9us; 76us; 0us; 16415us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 1us; 32768us; 9us; 92us; 0us; 16419us; 1us; 32768us; 9us; 91us; 0us; 16420us; 0us; 16421us; 1us; 16421us; 16us; 100us; 1us; 32768us; 23us; 94us; 1us; 32768us; 25us; 104us; 1us; 32768us; 19us; 96us; 1us; 32768us; 25us; 113us; 1us; 32768us; 19us; 98us; 1us; 32768us; 25us; 116us; 0us; 16422us; 1us; 32768us; 15us; 101us; 1us; 32768us; 21us; 131us; 2us; 32768us; 9us; 103us; 21us; 131us; 0us; 16423us; 1us; 32768us; 9us; 105us; 2us; 32768us; 12us; 111us; 25us; 106us; 0us; 16424us; 2us; 32768us; 12us; 111us; 25us; 108us; 0us; 16425us; 0us; 16426us; 0us; 16427us; 1us; 32768us; 9us; 112us; 0us; 16428us; 1us; 32768us; 9us; 114us; 1us; 32768us; 25us; 115us; 0us; 16429us; 1us; 32768us; 21us; 117us; 1us; 32768us; 30us; 118us; 1us; 32768us; 20us; 119us; 1us; 32768us; 25us; 120us; 0us; 16430us; 1us; 32768us; 26us; 122us; 1us; 32768us; 25us; 123us; 1us; 32768us; 21us; 124us; 1us; 32768us; 30us; 125us; 1us; 32768us; 20us; 126us; 1us; 32768us; 25us; 127us; 1us; 32768us; 24us; 128us; 0us; 16431us; 0us; 16432us; 0us; 16433us; 1us; 32768us; 30us; 132us; 1us; 32768us; 20us; 133us; 1us; 32768us; 23us; 134us; 1us; 32768us; 21us; 135us; 1us; 32768us; 30us; 136us; 1us; 32768us; 20us; 137us; 0us; 16434us; 0us; 16435us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 2us; 3us; 4us; 6us; 8us; 11us; 13us; 14us; 16us; 19us; 20us; 22us; 23us; 24us; 26us; 31us; 33us; 35us; 37us; 39us; 41us; 42us; 44us; 46us; 48us; 50us; 51us; 53us; 55us; 57us; 59us; 60us; 62us; 64us; 66us; 68us; 70us; 71us; 73us; 74us; 75us; 77us; 79us; 81us; 83us; 85us; 87us; 88us; 89us; 90us; 92us; 93us; 95us; 96us; 97us; 99us; 101us; 103us; 105us; 107us; 109us; 111us; 113us; 115us; 117us; 119us; 120us; 122us; 124us; 126us; 127us; 129us; 130us; 132us; 133us; 134us; 136us; 139us; 140us; 142us; 144us; 145us; 147us; 148us; 149us; 150us; 151us; 153us; 154us; 156us; 157us; 158us; 160us; 162us; 164us; 166us; 168us; 170us; 172us; 173us; 175us; 177us; 180us; 181us; 183us; 186us; 187us; 190us; 191us; 192us; 193us; 195us; 196us; 198us; 200us; 201us; 203us; 205us; 207us; 209us; 210us; 212us; 214us; 216us; 218us; 220us; 222us; 224us; 225us; 226us; 227us; 229us; 231us; 233us; 235us; 237us; 239us; 240us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 5us; 3us; 2us; 2us; 8us; 6us; 6us; 8us; 1us; 1us; 2us; 7us; 1us; 1us; 3us; 1us; 1us; 2us; 12us; 10us; 2us; 4us; 3us; 1us; 1us; 2us; 3us; 5us; 1us; 1us; 2us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 3us; 4us; 1us; 2us; 2us; 3us; 5us; 8us; 1us; 2us; 7us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 4us; 5us; 5us; 5us; 5us; 6us; 7us; 7us; 8us; 9us; 10us; 11us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 17us; 18us; 18us; 19us; 19us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 24us; 25us; 26us; 27us; 27us; 28us; 28us; 29us; 30us; 31us; 32us; 33us; 33us; 34us; 35us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 65535us; 65535us; 65535us; 65535us; 16386us; 65535us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 16392us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16395us; 16396us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16397us; 16398us; 16399us; 65535us; 16400us; 65535us; 16402us; 16403us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 16407us; 65535us; 16408us; 65535us; 16410us; 16411us; 65535us; 65535us; 16412us; 65535us; 65535us; 16413us; 65535us; 16415us; 16416us; 16417us; 16418us; 65535us; 16419us; 65535us; 16420us; 16421us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 65535us; 65535us; 16424us; 65535us; 16425us; 16426us; 16427us; 65535us; 16428us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16431us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16434us; 16435us; |]
let _fsyacc_reductions ()  =    [| 
# 340 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SolutionFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startSTART));
# 349 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONFILE)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "..\..\Sln2NMakeParser.fsy"
                                         Console.WriteLine(_1)
                                         _1 
                   )
# 59 "..\..\Sln2NMakeParser.fsy"
                 : Ast.SolutionFile));
# 361 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'VERSION)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTLIST)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSOLUTIONPROPERTYSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "..\..\Sln2NMakeParser.fsy"
                                                                                       Ast.SolutionFile(_2,_3, _4)
                   )
# 62 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONFILE));
# 374 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSECTIONLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 66 "..\..\Sln2NMakeParser.fsy"
                                                             _2
                   )
# 66 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSOLUTIONPROPERTYSECTION));
# 385 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSECTION)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 69 "..\..\Sln2NMakeParser.fsy"
                                                             [_1]
                   )
# 69 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTIONLIST));
# 397 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSECTIONLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'GLOBALSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 70 "..\..\Sln2NMakeParser.fsy"
                                                             _2::_1
                   )
# 70 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTIONLIST));
# 409 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONCONFIGURATONPLATFORMSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "..\..\Sln2NMakeParser.fsy"
                            printfn ("Reducing GLOBALSECTION SolutionConfigurationPlatform Section");
                          _7 
                   )
# 76 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTION));
# 421 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATIONPLATFORMNAME)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATIONSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "..\..\Sln2NMakeParser.fsy"
                             
                             printfn "Reducing GLOBALSECTION PROJECTCONFIGURATIONPLATFORMNAME";
                             _5 
                           
                   )
# 81 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTION));
# 436 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTIESNAME)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTYSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "..\..\Sln2NMakeParser.fsy"
                          
                           printfn "Reducing GLOBALSECTION SOLUTIONPROPERTIESNAME";
                           _5
                         
                   )
# 88 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTION));
# 451 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'OTHERPROPERTYSECTION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "..\..\Sln2NMakeParser.fsy"
                          
                           printfn "Reducing GLOBALSECTION OTHERPROPERTYSECTIONNAME"
                           OtherPropertyList(_3, _7)
                         
                   )
# 96 "..\..\Sln2NMakeParser.fsy"
                 : 'GLOBALSECTION));
# 466 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONCONFIGURATIONPLATFORMLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "..\..\Sln2NMakeParser.fsy"
                            
                            printfn "Reducing SOLUTIONCONFIGURATONPLATFORMSECTION ";
                            SolutionConfigurationPlatforms(_1)
                          
                   )
# 105 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONCONFIGURATONPLATFORMSECTION));
# 480 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONCONFIGURATIONPLATFORM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "..\..\Sln2NMakeParser.fsy"
                                                             [_1] 
                   )
# 111 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONCONFIGURATIONPLATFORMLIST));
# 491 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONCONFIGURATIONPLATFORMLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONCONFIGURATIONPLATFORM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "..\..\Sln2NMakeParser.fsy"
                                                                                           _2::_1 
                   )
# 112 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONCONFIGURATIONPLATFORMLIST));
# 503 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'PLATFORM)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'PLATFORM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "..\..\Sln2NMakeParser.fsy"
                           
                           let configuration = _1 in
                           let platform = _3 in
                           printfn "Reducing (Configuration:%s, Platform:%s)" configuration platform ;
                           (Configuration(configuration),Platform(platform))
                         
                   )
# 117 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONCONFIGURATIONPLATFORM));
# 522 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "..\..\Sln2NMakeParser.fsy"
                          
                           //(List.fold (fun (sb:StringBuilder) (s:String) -> if (sb.Length = 0) then sb.Append(s) else sb.Append(" ").Append(s) ) (new StringBuilder("")) _1).ToString()
                           _1
                         
                   )
# 127 "..\..\Sln2NMakeParser.fsy"
                 : 'CONFIGURATION));
# 536 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "..\..\Sln2NMakeParser.fsy"
                          
                           _1
                         
                   )
# 135 "..\..\Sln2NMakeParser.fsy"
                 : 'PLATFORM));
# 549 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "..\..\Sln2NMakeParser.fsy"
                                                                                          2
                   )
# 140 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATIONPLATFORMNAME));
# 559 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATIONLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "..\..\Sln2NMakeParser.fsy"
                                                    PlatformConfigurationPlatforms(_1) 
                   )
# 143 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATIONSECTION));
# 570 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "..\..\Sln2NMakeParser.fsy"
                                                          [_1]
                   )
# 146 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATIONLIST));
# 581 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATIONLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTCONFIGURATION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "..\..\Sln2NMakeParser.fsy"
                                                                         _2::_1 
                   )
# 147 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATIONLIST));
# 593 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'PLATFORM)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'BUILDPARAM)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'PLATFORM)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "..\..\Sln2NMakeParser.fsy"
                             
                             printfn "Reducing PROJECTCONFIGURATION Rule 1";
                             (BuildConfigGuid(_2), (Configuration(_5), Platform(_7)), _8,
                               (Some(Configuration(_10)), Some(Platform(_12)) ) )
                   )
# 153 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATION));
# 612 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'PLATFORM)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'BUILDPARAM)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'CONFIGURATION)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "..\..\Sln2NMakeParser.fsy"
                             
                             printfn "Reducing PROJECTCONFIGURATION Rule 2";
                             let reduction = (BuildConfigGuid(_2), (Configuration(_5), Platform(_7)), _8,
                                                (Some(Configuration(_10)), None ) )
                             reduction
                          
                   )
# 160 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTCONFIGURATION));
# 632 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "..\..\Sln2NMakeParser.fsy"
                                        ActiveCfg
                   )
# 169 "..\..\Sln2NMakeParser.fsy"
                 : 'BUILDPARAM));
# 643 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "..\..\Sln2NMakeParser.fsy"
                                                         Build(Int32.Parse(_4))
                   )
# 170 "..\..\Sln2NMakeParser.fsy"
                 : 'BUILDPARAM));
# 655 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "..\..\Sln2NMakeParser.fsy"
                                                                                 
                   )
# 173 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTIESNAME));
# 665 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTYLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "..\..\Sln2NMakeParser.fsy"
                                                SolutionPropertyList(_1) 
                   )
# 176 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTYSECTION));
# 676 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "..\..\Sln2NMakeParser.fsy"
                                                                [_1]
                   )
# 179 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTYLIST));
# 687 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTYLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "..\..\Sln2NMakeParser.fsy"
                                                                _2::_1
                   )
# 180 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTYLIST));
# 699 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "..\..\Sln2NMakeParser.fsy"
                           
                           (PropertyName(_1), PropertyValue(_3))
                         
                   )
# 184 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTY));
# 713 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "..\..\Sln2NMakeParser.fsy"
                                                                                    (PropertyName(_1), PropertyValue( _4.ToString() ))
                   )
# 187 "..\..\Sln2NMakeParser.fsy"
                 : 'SOLUTIONPROPERTY));
# 725 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'OTHERPROPERTYLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "..\..\Sln2NMakeParser.fsy"
                                             OtherPropertyData(_1) 
                   )
# 190 "..\..\Sln2NMakeParser.fsy"
                 : 'OTHERPROPERTYSECTION));
# 736 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "..\..\Sln2NMakeParser.fsy"
                                                                   [_1]
                   )
# 193 "..\..\Sln2NMakeParser.fsy"
                 : 'OTHERPROPERTYLIST));
# 747 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'OTHERPROPERTYLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'SOLUTIONPROPERTY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "..\..\Sln2NMakeParser.fsy"
                                                                   _2::_1
                   )
# 194 "..\..\Sln2NMakeParser.fsy"
                 : 'OTHERPROPERTYLIST));
# 759 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECT)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "..\..\Sln2NMakeParser.fsy"
                                            [_1]
                   )
# 198 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTLIST));
# 770 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECT)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "..\..\Sln2NMakeParser.fsy"
                                              _2::_1
                   )
# 199 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTLIST));
# 782 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTINFO)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ENDPROJECT)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "..\..\Sln2NMakeParser.fsy"
                           printfn "Reducing PROJECT Rule 1";
                           Project(_1,[]) 
                   )
# 203 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECT));
# 795 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTINFO)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'DEPENDENCYSECTION)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ENDPROJECT)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "..\..\Sln2NMakeParser.fsy"
                            printfn "Reducing PROJECT Rule 2";
                            Project(_1,_2) 
                   )
# 206 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECT));
# 809 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "..\..\Sln2NMakeParser.fsy"
                                 _1
                   )
# 210 "..\..\Sln2NMakeParser.fsy"
                 : 'ENDPROJECT));
# 820 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTHEADER)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTNAME)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTPATH)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'PROJECTIDGUID)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "..\..\Sln2NMakeParser.fsy"
                           
                            printfn "Reducing PROJECTINFO";
                             let x = ProjectInfo(ProjectGuid(_1), ProjectName(_3), ProjectPath(_5), BuildConfigGuid(_7)) in
                             x
                         
                   )
# 214 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTINFO));
# 838 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'DEPENDENCYLIST)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "..\..\Sln2NMakeParser.fsy"
                                                                                       _4
                   )
# 220 "..\..\Sln2NMakeParser.fsy"
                 : 'DEPENDENCYSECTION));
# 851 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "..\..\Sln2NMakeParser.fsy"
                                              let projectname = _2
                                              in
                                              projectname 
                   )
# 222 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTNAME));
# 864 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'DOTSTRINGLIST)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "..\..\Sln2NMakeParser.fsy"
                           
                   )
# 226 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTNAME));
# 876 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'DOTSTRING)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "..\..\Sln2NMakeParser.fsy"
                                    [_1] 
                   )
# 228 "..\..\Sln2NMakeParser.fsy"
                 : 'DOTSTRINGLIST));
# 887 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'DOTSTRINGLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'DOTSTRING)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "..\..\Sln2NMakeParser.fsy"
                                                  _2::_1
                   )
# 229 "..\..\Sln2NMakeParser.fsy"
                 : 'DOTSTRINGLIST));
# 899 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "..\..\Sln2NMakeParser.fsy"
                                         String.Format(".{0}", _2)
                   )
# 232 "..\..\Sln2NMakeParser.fsy"
                 : 'DOTSTRING));
# 910 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "..\..\Sln2NMakeParser.fsy"
                                             _2
                   )
# 235 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTPATH));
# 921 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "..\..\Sln2NMakeParser.fsy"
                                                                               _3 
                   )
# 237 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTIDGUID));
# 932 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "..\..\Sln2NMakeParser.fsy"
                                                                                                                     _5
                   )
# 239 "..\..\Sln2NMakeParser.fsy"
                 : 'PROJECTHEADER));
# 943 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'DEPENDENCY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "..\..\Sln2NMakeParser.fsy"
                                                     [_1]
                   )
# 241 "..\..\Sln2NMakeParser.fsy"
                 : 'DEPENDENCYLIST));
# 954 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'DEPENDENCYLIST)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'DEPENDENCY)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "..\..\Sln2NMakeParser.fsy"
                                                     _2::_1
                   )
# 242 "..\..\Sln2NMakeParser.fsy"
                 : 'DEPENDENCYLIST));
# 966 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : System.Guid)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "..\..\Sln2NMakeParser.fsy"
                           ProjectDependency(_2)
                   )
# 245 "..\..\Sln2NMakeParser.fsy"
                 : 'DEPENDENCY));
# 978 "..\..\Sln2NMakeParser.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.String)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "..\..\Sln2NMakeParser.fsy"
                                       let ver = _1
                                       Ast.Version(ver) 
                   )
# 247 "..\..\Sln2NMakeParser.fsy"
                 : 'VERSION));
|]
# 991 "..\..\Sln2NMakeParser.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 35;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let START lexer lexbuf : Ast.SolutionFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))

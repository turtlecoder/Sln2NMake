// Signature file for parser generated by fsyacc
type token = 
  | SOLUTIONPROPERTIESNAMESTRING
  | PROJECTCONFIGURATIONPLATFORMNAMESTRING
  | SOLUTIONCONFIGURATIONPLATFORMNAMESTRING
  | POSTSOLUTION
  | PRESOLUTION
  | ENDGLOBAL
  | GLOBAL
  | ENDGLOBALSECTION
  | BEGINGLOBALSECTION
  | STRING of (System.String)
  | INT of (int)
  | BUILD
  | PERIOD
  | SOLUTIONCONFIGURATIONPLATFORMNAME
  | PIPE
  | POSTPROJECT
  | PROJECTDEPENDENCIES
  | PROJECTSECTION
  | ENDPROJECTSECTION
  | COMMA
  | CURLYBRACKETCLOSE
  | CURLYBRACKETOPEN
  | EOF
  | EQUALSIGN
  | BRACKETCLOSE
  | QUOTE
  | BRACKETOPEN
  | PROJECTTOKEN
  | HEADER
  | BOOL of (System.Boolean)
  | GUID of (System.Guid)
  | PROJECTGUID of (System.Guid)
type tokenId = 
    | TOKEN_SOLUTIONPROPERTIESNAMESTRING
    | TOKEN_PROJECTCONFIGURATIONPLATFORMNAMESTRING
    | TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAMESTRING
    | TOKEN_POSTSOLUTION
    | TOKEN_PRESOLUTION
    | TOKEN_ENDGLOBAL
    | TOKEN_GLOBAL
    | TOKEN_ENDGLOBALSECTION
    | TOKEN_BEGINGLOBALSECTION
    | TOKEN_STRING
    | TOKEN_INT
    | TOKEN_BUILD
    | TOKEN_PERIOD
    | TOKEN_SOLUTIONCONFIGURATIONPLATFORMNAME
    | TOKEN_PIPE
    | TOKEN_POSTPROJECT
    | TOKEN_PROJECTDEPENDENCIES
    | TOKEN_PROJECTSECTION
    | TOKEN_ENDPROJECTSECTION
    | TOKEN_COMMA
    | TOKEN_CURLYBRACKETCLOSE
    | TOKEN_CURLYBRACKETOPEN
    | TOKEN_EOF
    | TOKEN_EQUALSIGN
    | TOKEN_BRACKETCLOSE
    | TOKEN_QUOTE
    | TOKEN_BRACKETOPEN
    | TOKEN_PROJECTTOKEN
    | TOKEN_HEADER
    | TOKEN_BOOL
    | TOKEN_GUID
    | TOKEN_PROJECTGUID
    | TOKEN_end_of_input
    | TOKEN_error
type nonTerminalId = 
    | NONTERM__startSTART
    | NONTERM_START
    | NONTERM_SOLUTIONFILE
    | NONTERM_GLOBALSOLUTIONPROPERTYSECTION
    | NONTERM_GLOBALSECTIONLIST
    | NONTERM_GLOBALSECTION
    | NONTERM_SOLUTIONCONFIGURATONPLATFORMSECTION
    | NONTERM_SOLUTIONCONFIGURATIONPLATFORMLIST
    | NONTERM_SOLUTIONCONFIGURATIONPLATFORM
    | NONTERM_CONFIGURATION
    | NONTERM_PLATFORM
    | NONTERM_PROJECTCONFIGURATIONPLATFORMNAME
    | NONTERM_PROJECTCONFIGURATIONSECTION
    | NONTERM_PROJECTCONFIGURATIONLIST
    | NONTERM_PROJECTCONFIGURATION
    | NONTERM_BUILDPARAM
    | NONTERM_SOLUTIONPROPERTIESNAME
    | NONTERM_SOLUTIONPROPERTYSECTION
    | NONTERM_SOLUTIONPROPERTYLIST
    | NONTERM_SOLUTIONPROPERTY
    | NONTERM_OTHERPROPERTYSECTION
    | NONTERM_OTHERPROPERTYLIST
    | NONTERM_PROJECTLIST
    | NONTERM_PROJECT
    | NONTERM_ENDPROJECT
    | NONTERM_PROJECTINFO
    | NONTERM_DEPENDENCYSECTION
    | NONTERM_PROJECTNAME
    | NONTERM_DOTSTRINGLIST
    | NONTERM_DOTSTRING
    | NONTERM_PROJECTPATH
    | NONTERM_PROJECTIDGUID
    | NONTERM_PROJECTHEADER
    | NONTERM_DEPENDENCYLIST
    | NONTERM_DEPENDENCY
    | NONTERM_VERSION
/// This function maps integers indexes to symbolic token ids
val tagOfToken: token -> int

/// This function maps integers indexes to symbolic token ids
val tokenTagToTokenId: int -> tokenId

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
val prodIdxToNonTerminal: int -> nonTerminalId

/// This function gets the name of a token as a string
val token_to_string: token -> string
val START : (Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> token) -> Microsoft.FSharp.Text.Lexing.LexBuffer<'cty> -> (Ast.SolutionFile) 
